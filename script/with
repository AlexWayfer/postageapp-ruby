#!/usr/bin/env ruby

# == Constants ==============================================================

GEMFILE_DIR = File.expand_path('../test/gemfiles', File.dirname(__FILE__))

# == Support Methods ========================================================

def bundle_version(gemfile)
  File.open(gemfile) do |f|
    f.each do |line|
      if (line.match(/\Agem\s+['"]bundler['"]\s*,\s*['"]([^'"]+)['"]/))
        return $1
      end
    end
  end

  nil
end

def gemfile_list
  Dir.entries(GEMFILE_DIR).reject do |name|
    name[/\A\./] or name[/\.lock\z/]
  end.collect do |name|
    name.sub(/\AGemfile\./, '')
  end
end

def with_variant(variant, &block)
  case (variant)
  when 'current'
    yield(bundle_version(ENV['BUNDLE_GEMFILE']))
  when 'each', 'all'
    gemfile_list.each do |_variant|
      with_variant(_variant, &block)
    end
  else
    ENV['BUNDLE_GEMFILE'] = File.expand_path('Gemfile.%s' % variant, GEMFILE_DIR)

    yield(bundle_version(ENV['BUNDLE_GEMFILE']))
  end
end

# == Main ===================================================================

variant = ARGV[0]

unless (variant)
  puts "Usage: with <gemspec variant> <bundle|rake> ..."


  puts
  puts "Available variants:"
  gemfile_list.each do |name|
    puts name
  end

  exit(-1)
end

with_variant(variant) do |bundle_version|
  bundle_version_args = bundle_version ? [ '_%s_' % bundle_version ] : [ ]

  case (ARGV[1])
  when 'env'
    puts 'BUNDLE_GEMFILE=%s' % ENV['BUNDLE_GEMFILE']
  when 'bootstrap'
    if (bundle_version)
      puts 'gem install bundler -v %s' % bundle_version
    end
  when 'bundle'
    system("bundle", *bundle_version_args, *ARGV.to_a[2, ARGV.length])
  when 'rake'
    system("bundle", *bundle_version_args, "exec", "rake", *ARGV.to_a[2, ARGV.length])
  end
end
